<?xml version="1.0" encoding="UTF-8"?>
<!-- Generated by org.testng.reporters.JUnitXMLReporter -->
<testsuite ignored="0" hostname="srvweblpubt20-Inspiron-3493" failures="0" tests="3" name="Default test" time="0.059" errors="0" timestamp="2022-09-28T16:26:57 IST">
  <testcase classname="testBase.TestBase" name="@BeforeMethod LaunchApplication" time="0.003">
    <failure type="java.io.FileNotFoundException" message="/home/srvweblpubt20/eclipse-workspace/SCAE_Alumni (Is a directory)">
      <![CDATA[java.io.FileNotFoundException: /home/srvweblpubt20/eclipse-workspace/SCAE_Alumni (Is a directory)
at java.base/java.io.FileInputStream.open0(Native Method)
at java.base/java.io.FileInputStream.open(FileInputStream.java:219)
at java.base/java.io.FileInputStream.<init>(FileInputStream.java:157)
at java.base/java.io.FileInputStream.<init>(FileInputStream.java:112)
at reuseableComponent.PropertiesOpertation.getPropertyValueByKey(PropertiesOpertation.java:15)
at testBase.TestBase.LaunchApplication(TestBase.java:21)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:566)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:133)
at org.testng.internal.MethodInvocationHelper.invokeMethodConsideringTimeout(MethodInvocationHelper.java:62)
at org.testng.internal.ConfigInvoker.invokeConfigurationMethod(ConfigInvoker.java:385)
at org.testng.internal.ConfigInvoker.invokeConfigurations(ConfigInvoker.java:321)
at org.testng.internal.TestInvoker.runConfigMethods(TestInvoker.java:700)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:527)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:173)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:824)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:146)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1541)
at org.testng.TestRunner.privateRun(TestRunner.java:794)
at org.testng.TestRunner.run(TestRunner.java:596)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:377)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:371)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:332)
at org.testng.SuiteRunner.run(SuiteRunner.java:276)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1212)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1134)
at org.testng.TestNG.runSuites(TestNG.java:1063)
at org.testng.TestNG.run(TestNG.java:1031)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
    </failure>
  </testcase> <!-- @BeforeMethod LaunchApplication -->
  <testcase classname="testBase.TestBase" name="@AfterMethod tearDown" time="-1.664362616984E9">
    <skipped/>
  </testcase> <!-- @AfterMethod tearDown -->
  <testcase classname="testBase.TestBase" name="@BeforeMethod LaunchApplication" time="-1.664362616986E9">
    <skipped/>
  </testcase> <!-- @BeforeMethod LaunchApplication -->
  <testcase classname="testBase.TestBase" name="@AfterMethod tearDown" time="-1.66436261699E9">
    <skipped/>
  </testcase> <!-- @AfterMethod tearDown -->
  <testcase classname="testBase.TestBase" name="@BeforeMethod LaunchApplication" time="-1.664362616991E9">
    <skipped/>
  </testcase> <!-- @BeforeMethod LaunchApplication -->
  <testcase classname="testBase.TestBase" name="@AfterMethod tearDown" time="-1.664362616994E9">
    <skipped/>
  </testcase> <!-- @AfterMethod tearDown -->
  <testcase classname="Test.TestCase" name="TestCase1" time="0.0">
    <skipped/>
  </testcase> <!-- TestCase1 -->
  <testcase classname="Test.TestCase" name="TestCase2" time="0.0">
    <skipped/>
  </testcase> <!-- TestCase2 -->
  <testcase classname="Test.TestCase" name="TestCase3" time="0.0">
    <skipped/>
  </testcase> <!-- TestCase3 -->
</testsuite> <!-- Default test -->
